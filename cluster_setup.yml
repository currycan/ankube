- hosts:
  - kube_cluster
  - kube_etcds
  - chrony
  become: true
  gather_facts: true
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  roles:
  # 校验基础环境是否就绪，如：内核版本
  - { role: initialize/check-environment }
  # 时间校准
  - { role: initialize/chrony, when: "groups['chrony']|length > 0" }
  # 系统初始化
  - { role: initialize/init }
  # 安装容器运行时
  - { role: container-runtime, when: "inventory_hostname in groups['kube_cluster']" }
  # 安装etcd
  - { role: etcd/certificates }
  - { role: etcd/install, when: "inventory_hostname in groups['kube_etcds']" }
  # 集群高可用
  - { role: k8s-setup/ha, when: "(groups['masters'] + groups['add_masters']) | length > 1" }
  # kubernetes安装
  - { role: k8s-setup/certificates, when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-setup/kubeconfig, when: "binary_way is defined and binary_way.enable and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-setup/install, when: "inventory_hostname in groups['kube_cluster']"}
  # 网络插件安装
  - { role: k8s-network/calico/certificates, when: "container_network == 'calico' and datastore_type is defined and datastore_type == 'custom'" }
  - { role: k8s-network/calico/install, when: "container_network == 'calico' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/cilium, when: "container_network == 'cilium' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/flannel, when: "container_network == 'flannel' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/kubeovn, when: "container_network == 'kubeovn' and inventory_hostname in groups['kube_cluster']" }
  # helm 安装
  - { role: k8s-helm/helm3, when: "helm_type == 'helm3' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-helm/helm2/certificates, when: "helm_type == 'helm2' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-helm/helm2/certificates, when: "helm_type == 'helm2' and inventory_hostname in groups['kube_cluster']" }
  # coreDNS 安装
  - { role: k8s-addons/kustomize, addon: "{{ kustomiz_addons.kube_dns }}", when: "inventory_hostname in groups['kube_cluster']" }
  # ## 系统常用应用组件安装
  # kustomize build
  - { role: k8s-addons/kustomize, addon: "{{ kustomiz_addons.metallb}}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/kustomize, addon: "{{ kustomiz_addons.ingress_nginx}}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/kustomize, addon: "{{ kustomiz_addons.snapshotter}}", when: "inventory_hostname in groups['kube_cluster']" }
  #  helm install
  - { role: k8s-addons/helm, addon: "{{ helm_addons.cert_manager }}", when: "inventory_hostname in groups['kube_cluster']" }
  #  kubectl apply
  - { role: k8s-addons/normal, addon: "{{ normal_addons.metric_server }}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/normal, addon: "{{ normal_addons.kuboard }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons/normal, addon: "{{ normal_addons.pv_browser }}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/normal, addon: "{{ normal_addons.storage_nfs }}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/normal, addon: "{{ normal_addons.rbac_manager }}", when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-addons/normal, addon: "{{ normal_addons.kubectl_debug }}", when: "inventory_hostname in groups['kube_cluster']" }
