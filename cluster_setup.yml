- hosts:
  - kube_cluster
  - etcds
  - chrony
  become: true
  gather_facts: true
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  roles:
  # 校验基础环境是否就绪，如：内核版本
  - { role: initialize/check-environment }
  # 时间校准
  - { role: initialize/chrony, when: "groups['chrony']|length > 0" }
  # 系统初始化
  - { role: initialize/init }
  # 安装容器运行时
  - { role: container-runtime, when: "inventory_hostname in groups['kube_cluster']" }
  # 安装etcd
  - { role: etcd/certificates, when: "inventory_hostname in groups['kube_etcds']" }
  - { role: etcd/install, when: "inventory_hostname in groups['kube_etcds']" }
  # 集群高可用
  - { role: k8s-setup/ha, when: "(groups['masters'] + groups['add_masters']) | length > 1" }
  # kubernetes安装
  - { role: k8s-setup/certificates, when: "inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-setup/kubeconfig, when: "binary_way is defined and binary_way.enable and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-setup/install, when: "inventory_hostname in groups['kube_cluster']"}
  # 网络插件安装
  - { role: k8s-network/calico/certificates, when: "container_network == 'calico' and datastore_type is defined and datastore_type == 'customize'" }
  - { role: k8s-network/calico/install, when: "container_network == 'calico' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/cilium, when: "container_network == 'cilium' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/flannel, when: "container_network == 'flannel' and inventory_hostname in groups['kube_cluster']" }
  - { role: k8s-network/kubeovn, when: "container_network == 'kubeovn' and inventory_hostname in groups['kube_cluster']" }
  # coredns
  - { role: k8s-coredns, when: "inventory_hostname in groups['kube_cluster']" }
  # ## 【可选】以下是可选部分，安装集群相关插件
  # # helm 安装
  # - { role: k8s-helm/certificates, when: "inventory_hostname in groups['kube_cluster']"  }
  # - { role: k8s-helm/install, when: "inventory_hostname in groups['kube_cluster']"  }
  # ## 系统常用应用组件安装
  # # helm cert-manager
  # - { role: k8s-addons, addon: helm-cert-manager, when: "inventory_hostname in groups['kube_cluster']" }
  # # kubectl apply
  # - { role: k8s-addons, addon: "{{ addons.metallb }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons, addon: "{{ addons.nginx_ingress }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons, addon: "{{ addons.metric_server }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons, addon: "{{ addons.kuboard }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons, addon: "{{ addons.rbac_manager }}", when: "inventory_hostname in groups['kube_cluster']" }
  # - { role: k8s-addons, addon: "{{ addons.kubectl_debug }}", when: "inventory_hostname in groups['kube_cluster']" }
  # # storage nfs（需提前安装好nfs服务端）
  # - { role: k8s-storage, storage_class: nfs , when: "inventory_hostname in groups['kube_cluster']" }
