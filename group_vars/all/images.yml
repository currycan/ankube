# 基础镜像
images:
  infra:
    name: "{{ kube_image_repository }}/pause:3.2"
    file: "pause-3.2"
    type: all

  apiserver:
    name: "{{ kube_image_repository }}/kube-apiserver:v{{ kube_version }}"
    file: "kube-apiserver-v{{ kube_version }}"
    type: master
  controller_manager:
    name: "{{ kube_image_repository }}/kube-controller-manager:v{{ kube_version }}"
    file: "kube-controller-manager-v{{ kube_version }}"
    type: master
  scheduler:
    name: "{{ kube_image_repository }}/kube-scheduler:v{{ kube_version }}"
    file: "kube-scheduler-v{{ kube_version }}"
    type: master
  proxy:
    name: "{{ kube_image_repository }}/kube-proxy:v{{ kube_version }}"
    file: "kube-proxy-v{{ kube_version }}"
    type: all

  calico_node:
    name: "docker.io/calico/node:v{{ calico_version }}"
    file: "calico-node-v{{ calico_version }}"
    type: all
  calico_pod2daemon:
    name: "docker.io/calico/pod2daemon-flexvol:v{{ calico_version }}"
    file: "calico-pod2daemon-flexvol-v{{ calico_version }}"
    type: all
  calico_cni:
    name: "docker.io/calico/cni:v{{ calico_version }}"
    file: "calico-cni-v{{ calico_version }}"
    type: all
  calico_kube_controllers:
    name: "docker.io/calico/kube-controllers:v{{ calico_version }}"
    file: "calico-kube-controllers-v{{ calico_version }}"
    type: worker

  flannel:
    name: "quay.io/coreos/flannel:v{{ flanneld_version }}-amd64"
    file: "flannel-v{{ flanneld_version }}"
    type: all

  kubeovn:
    name: "docker.io/kubeovn/kube-ovn:v{{ kubeovn_version }}"
    file: "kubeovn-v{{ kubeovn_version }}"
    type: all

  cilium:
    name: "docker.io/cilium/cilium:v{{ cilium_version }}"
    file: "cilium-v{{ cilium_version }}"
    type: all
  operator_generic:
    name: "docker.io/cilium/operator-generic:v{{ cilium_version }}"
    file: "cilium-operator-generic-v{{ cilium_version }}"
    type: worker
  etcd:
    name: "quay.io/coreos/etcd:v{{ etcd_version }}"
    file: "etcd-v{{ etcd_version }}"
    type: worker
  clustermesh_apiserver:
    name: "docker.io/cilium/clustermesh-apiserver:v1.9.0"
    file: "clustermesh-apiserver-v1.9.0"
    type: worker
  hubble_relay:
    name: "docker.io/cilium/hubble-relay:v1.9"
    file: "cilium-hubble-relay-v1.9"
    type: worker
  hubble_ui:
    name: "docker.io/cilium/hubble-ui:v0.7.2"
    file: "cilium-hubble-ui-v0.7.2"
    type: worker
  hubble_ui_backend:
    name: "docker.io/cilium/hubble-ui-backend:v0.7.5"
    file: "cilium-hubble-ui-backend-v0.7.5"
    type: worker
  envoy:
    name: "docker.io/envoyproxy/envoy:v1.16.2"
    file: "envoyproxy-envoy-v1.16.2"
    type: worker
  certgen:
    name: "docker.io/cilium/certgen:v0.1.3"
    file: "cilium-certgen-v0.1.3"
    type: worker
  hubble:
    name: "quay.io/cilium/hubble:v0.7.1"
    file: "cilium-hubble-v0.7.1"
    type: worker
  json_mock:
    name: "cilium/json-mock:1.2"
    file: "cilium-json-mock-1.2"
    type: worker

  alpine_curl:
    name: "docker.io/byrnedo/alpine-curl:0.1.8"
    file: "alpine-curl-0.1.8"
    type: worker

  helm_tiller:
    name: "gcrxio/gcr.io_kubernetes-helm_tiller:v{{ helm2_version }}"
    file: "helm-tiller-v{{ helm2_version }}"
    type: worker

  cert_manager_cainjector:
    name: "quay.io/jetstack/cert-manager-cainjector:v1.1.0"
    file: cert-manager-cainjector-v1.1.0
    type: worker
  cert_manager_webhook:
    name: "quay.io/jetstack/cert-manager-webhook:v1.1.0"
    file: cert-manager-webhook-v1.1.0
    type: worker
  cert_manager_controller:
    name: "quay.io/jetstack/cert-manager-controller:v1.1.0"
    file: cert-manager-controller-v1.1.0
    type: worker

  coredns:
    name: "docker.io/coredns/coredns:{{ coredns_version }}"
    file: "coredns-{{ coredns_version }}"
    type: worker
  autoscaler:
    name: "k8s.gcr.io/cpa/cluster-proportional-autoscaler-amd64:1.8.3"
    file: autoscaler-amd64-1.8.3
    type: worker
  nodelocaldns:
    name: "k8s.gcr.io/dns/k8s-dns-node-cache:1.16.0"
    file: k8s-dns-node-cache-1.16.0
    type: all

  galaxy:
    name: "docker.io/tkestack/galaxy:v1.0.8"
    file: "galaxy-v1.0.8"
    type: all
  galaxy_ipam:
    name: "docker.io/tkestack/galaxy-ipam:v1.0.8"
    file: "galaxy-ipam-v1.0.8"
    type: worker

  metallb_speaker:
    name: "docker.io/metallb/speaker:v0.9.5"
    file: "metallb-speaker-v0.9.5"
    type: all
  metallb_controller:
    name: "docker.io/metallb/controller:v0.9.5"
    file: "metallb-controller-v0.9.5"
    type: worker

  nginx_ingress_controller:
    name: "k8s.gcr.io/ingress-nginx/controller:v0.43.0"
    file: nginx-ingress-controller-v0.43.0
    type: master
  webhook_certgen:
    name: "docker.io/jettech/kube-webhook-certgen:v1.5.0"
    file: webhook-certgen-v1.5.0
    type: worker
  nginx_ingress_defaultbackend:
    name: "docker.io/gcrxio/k8s.gcr.io_defaultbackend-amd64:1.5"
    file: defaultbackend-amd64-1.5
    type: worker

  metrics_server:
    name: "k8s.gcr.io/metrics-server/metrics-server:v0.4.1"
    file: metrics-server-amd64-v0.4.1
    type: worker

  kuboard:
    name: "docker.io/eipwork/kuboard:v2.0.5.1"
    file: kuboard-v2.0.5.1
    type: worker
  pv_browser:
    name: "docker.io/eipwork/kuboard-pv-browser:v3.0.0"
    file: kuboard-pv-browser-v3.0.0
    type: worker

  rbac_manager:
    name: "quay.io/reactiveops/rbac-manager:v0.10.0"
    file: rbac-manager-v0.10.0
    type: worker

  snapshot_controller:
    name: "k8s.gcr.io/sig-storage/snapshot-controller:v4.0.0"
    file: snapshot-controller-v4.0.0
    type: worker
  csi_provisioner:
    name: "k8s.gcr.io/sig-storage/csi-provisioner:v2.0.2"
    file: csi-provisioner-v2.0.2
    type: worker
  csi_snapshotter:
    name: "k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0"
    file: csi-snapshotter-v4.0.0
    type: worker
  hostpathplugin:
    name: "k8s.gcr.io/sig-storage/hostpathplugin:v1.4.0"
    file: hostpathplugin-v1.4.0
    type: worker
  snapshot_validation:
    name: "k8s.gcr.io/sig-storage/snapshot-validation-webhook:v4.0.0"
    file: snapshot-validation-webhook-v4.0.0
    type: worker

  kubectl_debug:
    name: "docker.io/aylei/debug-agent:v0.1.1"
    file: kubectl-debug-agent-v0.1.1
    type: worker
  netshoot:
    name: "docker.io/nicolaka/netshoot:latest"
    file: nicolaka-netshoot
    type: all

  nfs_client_provisioner:
    name: "docker.io/simonrupf/k8s-nfs-client-provisioner:v3.2.1-k8s1.19"
    file: nfs-client-provisioner-v3.2.1-k8s1.19
    type: worker
