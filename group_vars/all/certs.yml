# certs hosts
master_cert_hosts: "{%- if (groups['masters'] + groups['add_masters']) | length > 1 -%}{{ vip_address }},{%- endif %}{% for host in (groups['masters'] + groups['add_masters']) %}{{ hostvars[host]['ansible_' + iface].ipv4.address }}{% if not loop.last %},{% endif %}{% endfor %},{% for host in (groups['masters'] + groups['add_masters'])%}{{ hostvars[host].ansible_hostname }}{% if not loop.last %},{% endif %}{% endfor %}"

etcd_cert_hosts: "{% for host in (groups['etcds'] + groups['add_etcds']) %}{{ hostvars[host]['ansible_' + iface].ipv4.address }}{% if not loop.last %},{% endif %}{% endfor %},{% for host in (groups['etcds'] + groups['add_etcds']) %}{{ hostvars[host].ansible_hostname }}{% if not loop.last %},{% endif %}{% endfor %},{{ etcd_domain_name }},127.0.0.1,localhost"

apiserver_hosts: "{{ master_cert_hosts }},{{ api_service_ip }},kubernetes,kubernetes.default,kubernetes.default.svc,kubernetes.default.svc.cluster,kubernetes.default.svc.{{ cluster_domain_name }},*.master.kubernetes.node,127.0.0.1,localhost"

# certs config
cert_key_algo: rsa
cert_key_size: 2048
cert_info_country: CN
cert_info_state: ShangHai
cert_info_locality: ShangHai
cert_info_org_uit: kubernetes
cert_info_expiry: 87600h

# 生成证书配置文件
# openssl
etcd_openssl_cnf: "{{ k8s_pki_dir }}/etcd-openssl.cnf"
kube_openssl_cnf: "{{ k8s_pki_dir }}/kube-openssl.cnf"
# cfssl
ca_config: "{{ k8s_pki_dir }}/ca-config.json"

# etcd certificates
etcd_ca: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}ca.pem{% else %}ca.crt{%- endif -%}"
etcd_ca_key: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}ca-key.pem{% else %}ca.key{%- endif -%}"
etcd_cert_server: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}server.pem{% else %}server.crt{%- endif -%}"
etcd_cert_server_key: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}server-key.pem{% else %}server.key{%- endif -%}"
etcd_cert_client: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}client.pem{% else %}client.crt{%- endif -%}"
etcd_cert_client_key: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}client-key.pem{% else %}client.key{%- endif -%}"
etcd_cert_peer: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}peer.pem{% else %}peer.crt{%- endif -%}"
etcd_cert_peer_key: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}peer-key.pem{% else %}peer.key{%- endif -%}"
etcd_cert_apiserver_server: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver-etcd-client.pem{% else %}apiserver-etcd-client.crt{%- endif -%}"
etcd_cert_apiserver_server_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver-etcd-client-key.pem{% else %}apiserver-etcd-client.key{%- endif -%}"
etcd_cert_healthcheck_client: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}healthcheck-client.pem{% else %}healthcheck-client.crt{%- endif -%}"
etcd_cert_healthcheck_client_key: "{{ etcd_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}healthcheck-client-key.pem{% else %}healthcheck-client.key{%- endif -%}"
# kubernetes certificates master nodes
kubernetes_ca: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}ca.pem{% else %}ca.crt{%- endif -%}"
kubernetes_ca_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}ca-key.pem{% else %}ca.key{%- endif -%}"
apiserver_cert: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver.pem{% else %}apiserver.crt{%- endif -%}"
apiserver_cert_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver-key.pem{% else %}apiserver.key{%- endif -%}"
apiserver_kubelet_cert: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver-kubelet-client.pem{% else %}apiserver-kubelet-client.crt{%- endif -%}"
apiserver_kubelet_cert_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}apiserver-kubelet-client-key.pem{% else %}apiserver-kubelet-client.key{%- endif -%}"
controller_cert_manager: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-controller-manager.pem{% else %}kube-controller-manager.crt{%- endif -%}"
controller_cert_manager_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-controller-manager-key.pem{% else %}kube-controller-manager.key{%- endif -%}"
scheduler_cert: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-scheduler.pem{% else %}kube-scheduler.crt{%- endif -%}"
scheduler_cert_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-scheduler-key.pem{% else %}kube-scheduler.key{%- endif -%}"
front_ca: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}front-proxy-ca.pem{% else %}front-proxy-ca.crt{%- endif -%}"
front_ca_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}front-proxy-ca-key.pem{% else %}front-proxy-ca.key{%- endif -%}"
front_client: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}front-proxy-client.pem{% else %}front-proxy-client.crt{%- endif -%}"
front_client_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}front-proxy-client-key.pem{% else %}front-proxy-client.key{%- endif -%}"
admin: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}admin.pem{% else %}admin.crt{%- endif -%}"
admin_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}admin-key.pem{% else %}admin.key{%- endif -%}"
sa_public_key: "{{ k8s_pki_dir }}/sa.pub"
sa_private_key: "{{ k8s_pki_dir }}/sa.key"
# kubernetes certificates worker nodes
kubelet_cert: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kubelet.pem{% else %}kubelet.crt{%- endif -%}"
kubelet_cert_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kubelet-key.pem{% else %}kubelet.key{%- endif -%}"
kube_proxy_cert: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-proxy.pem{% else %}kube-proxy.crt{%- endif -%}"
kube_proxy_cert_key: "{{ k8s_pki_dir }}/{%- if binary_way is defined and binary_way.enable and binary_way.cfssl_cert -%}kube-proxy-key.pem{% else %}kube-proxy.key{%- endif -%}"
