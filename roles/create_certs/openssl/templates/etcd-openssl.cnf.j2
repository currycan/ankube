[ req ]
default_bits = {{ cert_key_size }}
prompt = no
default_md = sha256
distinguished_name = req_distinguished_name

[req_distinguished_name]
C = "{{ cert_info_country }}"
ST = "{{ cert_info_state }}"
L = "{{ cert_info_locality }}"
OU = "{{ cert_info_org_uit }}"

[ v3_ca ]
basicConstraints = critical, CA:TRUE
keyUsage = critical, digitalSignature, keyEncipherment, keyCertSign

[ v3_req_server ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ v3_req_client ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

[ v3_req_peer ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth, clientAuth
subjectAltName = @alt_names_etcd

[ alt_names_etcd ]
DNS.1 = localhost
{% set dns_idx = 1 | int %}
{% if hostvars[inventory_hostname]['ansible_host'] is defined %}
{% for host in ((groups['etcds'] + groups['add_etcds'])|unique) %}
DNS.{{ dns_idx + loop.index }} = {% if hostvars[host]['ansible_host'] is defined %}{{ host }}{% endif %}

{% endfor %}
{% endif %}
IP.1 = 127.0.0.1
IP.2 = 0:0:0:0:0:0:0:1
{% set ip_idx = 2 | int %}
{% for host in ((groups['etcds'] + groups['add_etcds'])|unique) %}
IP.{{ ip_idx + loop.index }} = {% if hostvars[host]['ansible_host'] is defined %}{{ hostvars[host]['ansible_host'] }}{% else %}{{ host }}{% endif %}

{% endfor %}
