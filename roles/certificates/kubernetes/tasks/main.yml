- block:
  - name: 安装 update-kubeadm-cert.sh 工具
    include_role:
      name: certificates/generate/update

  - block:
    - name: 检查 service account 私钥是否存在
      stat:
        path: "{{ k8s_pki_dir }}/sa.key"
      register: check_sa_key

    - name: 生成 service account 公私钥证书对
      when: not check_sa_key.stat.exists
      command: "{{ item }}"
      with_items:
        - "openssl genrsa -out {{ k8s_pki_dir }}/sa.key {{ cert_key_size }}"
        - "openssl {{ cert_key_algo }} -in {{ k8s_pki_dir }}/sa.key -pubout -out {{ k8s_pki_dir }}/sa.pub"
    run_once: true
    delegate_to: "{{ groups['masters'][0] }}"

  - name: 获取 kubernetes master 节点相关证书
    slurp:
      src: "{{ item }}"
    with_items:
      - "{{ kubernetes_ca }}"
      - "{{ kubernetes_ca_key }}"
      - "{{ apiserver_cert }}"
      - "{{ apiserver_cert_key }}"
      - "{{ apiserver_kubelet_cert }}"
      - "{{ apiserver_kubelet_cert_key }}"
      - "{{ etcd_cert_apiserver_server }}"
      - "{{ etcd_cert_apiserver_server_key }}"
      - "{{ controller_cert_manager }}"
      - "{{ controller_cert_manager_key }}"
      - "{{ scheduler_cert }}"
      - "{{ scheduler_cert_key }}"
      - "{{ front_ca }}"
      - "{{ front_ca_key }}"
      - "{{ front_client }}"
      - "{{ front_client_key }}"
      - "{{ admin }}"
      - "{{ admin_key }}"
      - "{{ sa_public_key }}"
      - "{{ sa_private_key }}"
    register: slurp_kubernetes_master_certs
    run_once: true
    delegate_to: "{{ groups['masters'][0] }}"

  - name: 分发 kubernetes master 相关证书到 master 节点
    copy:
      dest: "{{ item.source }}"
      content: "{{ item.content | b64decode }}"
      owner: root
      group: root
      mode: 0644
    no_log: true
    with_items: "{{ slurp_kubernetes_master_certs.results }}"
    when:
      - inventory_hostname in groups['kube_masters']
      - inventory_hostname != groups['masters'][0]
  when: "(binary_way is defined and binary_way.enable and binary_way.openssl_cert) or (kubeadm_way is defined and kubeadm_way.enable and not kubeadm_way.kubeadm_cert)"
