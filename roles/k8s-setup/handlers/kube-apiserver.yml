- name: 确认 kube-apiserve 运行状态
  command: /bin/true
  notify:
    - 启动 kube-apiserver 服务，并设置开机启动
    - 以轮询的方式等待 kube-apiserver 服务启动完成
    - 检查 kube-apiserver 服务状态

- name: 启动 kube-apiserver 服务，并设置开机启动
  systemd:
    name: kube-apiserver
    daemon_reload: yes
    state: restarted
    enabled: yes
  register: started_apiserver
  until: started_apiserver is succeeded
  retries: 3
  delay: "{{ retry_stagger }}"

- name: 以轮询的方式等待 kube-apiserver 服务启动完成
  when: started_apiserver is succeeded
  shell: "systemctl status kube-apiserver.service | grep Active"
  register: apiserver_status
  until: '"running" in apiserver_status.stdout'
  retries: 2
  delay: "{{ retry_stagger }}"

- name: 检查 kube-apiserver 服务状态
  when: apiserver_status is succeeded
  wait_for:
    host: "127.0.0.1"
    port: "{{ item }}"
    delay: 5
    connect_timeout: 60
    timeout: 300
  with_items:
    - "{{ apiserver_secure_port }}"
