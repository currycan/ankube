- block:
  - name: master 节点渲染相关配置文件
    template:
      src: "{{ item.src }}.j2"
      dest: "{{ item.dest }}"
      owner: "root"
      group: "root"
      mode: "0644"
    with_items:
      - { src: "logrotate/kube-apiserver", dest: "/etc/logrotate.d/kube-apiserver" }
      - { src: "logrotate/kube-controller-manager", dest: "/etc/logrotate.d/kube-controller-manager" }
      - { src: "logrotate/kube-scheduler", dest: "/etc/logrotate.d/kube-scheduler" }
      - { src: "master/kube-apiserver.service", dest: "{{ systemd_service_dir }}/kube-apiserver.service" }
      - { src: "master/kube-controller-manager.service", dest: "{{ systemd_service_dir }}/kube-controller-manager.service" }
      - { src: "master/kube-scheduler.service", dest: "{{ systemd_service_dir }}/kube-scheduler.service" }
      - { src: "bootstrap-secret/kubelet-bootstrap-secret.yaml", dest: "{{ kubernetes_etc_dir }}/kubelet-bootstrap-secret.yaml" }

  - name: 启动 kubernetes master节点 三大核心组件，并设置开机启动
    systemd:
      name: "{{ item }}"
      daemon_reload: yes
      state: restarted
      enabled: yes
    with_items:
      - kube-apiserver
      - kube-controller-manager
      - kube-scheduler

  - include_tasks: common/check_master_status.yml

  - name: 创建 kubelet bootstrap secret
    shell: >
      {{ kubernetes_bin_dir }}/kubectl apply -f {{ kubernetes_etc_dir }}/kubelet-bootstrap-secret.yaml
    environment:
        KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
    run_once: true
    delegate_to: "{{ groups['masters'][0] }}"
  when: "inventory_hostname in groups['kube_masters']"
