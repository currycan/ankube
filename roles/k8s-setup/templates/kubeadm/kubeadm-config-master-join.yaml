---
apiVersion: kubeadm.k8s.io/v1beta2
kind: JoinConfiguration
discovery:
  bootstrapToken:
    apiServerEndpoint: "10.10.10.49:8443"
    token: 12zptv.qq7dsmro99em3m17
    unsafeSkipCAVerification: true
  timeout: 4m0s
  tlsBootstrapToken: 12zptv.qq7dsmro99em3m17
controlPlane:
  localAPIEndpoint:
    advertiseAddress: 10.10.10.2
    bindPort: 6443
nodeRegistration:
  kubeletExtraArgs:
    network-plugin: cni
    root-dir: /var/lib/kubelet
    hostname-override: 10.10.10.2
    pod-infra-container-image: registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.2
  criSocket: /var/run/dockershim.sock
  name: 10.10.10.2
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: v1.20.1
clusterName: kubernetes
controlPlaneEndpoint: "10.10.10.49:8443"
certificatesDir: /etc/kubernetes/pki
dns:
  type: CoreDNS
etcd:
  external:
    endpoints:
    - https://10.10.10.1:2379
    - https://10.10.10.2:2379
    - https://10.10.10.3:2379
    caFile: /etc/kubernetes/pki/etcd/ca.crt
    certFile: /etc/kubernetes/pki/apiserver-etcd-client.crt
    keyFile: /etc/kubernetes/pki/apiserver-etcd-client.key
imageRepository: "registry.cn-hangzhou.aliyuncs.com/google_containers"
networking:
  dnsDomain: cluster.local
  podSubnet: 172.30.0.0/16
  serviceSubnet: 172.31.0.0/16
apiServer:
  extraArgs:
    allow-privileged: "true"
    apiserver-count: "3"
    api-audiences: "api,istio-ca"
    audit-log-path: "/var/log/kubernetes/audit/apiserver_audit.log"
    audit-log-maxage: "30"
    audit-log-maxbackup: "10"
    audit-log-maxsize: "100"
    audit-log-truncate-enabled: "true"
    audit-policy-file: "/etc/kubernetes/audit/policy.yaml"
    service-account-issuer: "https://kubernetes.default.svc.cluster.local"
    service-account-signing-key-file: "/etc/kubernetes/pki/sa.key"
    enable-admission-plugins: NamespaceExists,NamespaceLifecycle,LimitRanger,ServiceAccount,Priority,DefaultTolerationSeconds,DefaultStorageClass,PersistentVolumeClaimResize,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,PersistentVolumeLabel,Priority
    encryption-provider-config: "/etc/kubernetes/pki/secrets-encryption.yaml"
    endpoint-reconciler-type: "lease"
    feature-gates: "RemoveSelfLink=false"
    kubelet-certificate-authority: /etc/kubernetes/pki/ca.crt
    kubelet-client-certificate: /etc/kubernetes/pki/apiserver-kubelet-client.crt
    kubelet-client-key: /etc/kubernetes/pki/apiserver-kubelet-client.key
    kubelet-https: "true"
    profiling: "false"
    service-node-port-range: 30000-32767
    max-requests-inflight: "1500"
    v: "2"
    tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    cloud-provider: "external"
    requestheader-username-headers: "X-Remote-User"
    enable-bootstrap-token-auth: "true"
    logtostderr: "false"
    requestheader-allowed-names: ""
    requestheader-group-headers: "X-Remote-Group"
    requestheader-client-ca-file: "/etc/kubernetes/pki/front-proxy-ca.crt"
    log-dir: "/var/log/kubernetes/kube-apiserver"
    requestheader-extra-headers-prefix: "X-Remote-Extra-"
    enable-aggregator-routing: "true"
    max-mutating-requests-inflight: "500"
    runtime-config=api/all: "true"
    alsologtostderr: "true"
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      pathType: File
      readOnly: true
      name: localtime
    - hostPath: "/etc/kubernetes/audit"
      mountPath: "/etc/kubernetes/audit"
      pathType: DirectoryOrCreate
      readOnly: true
      name: audit-policy
    - hostPath: "/var/log/kubernetes/audit"
      mountPath: "/var/log/kubernetes/audit"
      pathType: DirectoryOrCreate
      name: audit-logs
    # - hostPath: "/var/log/kubernetes/kube-apiserver"
    #   mountPath: "/var/log/kubernetes/kube-apiserver"
    #   pathType: DirectoryOrCreate
    #   name: kube-apiserver-logs
  certSANs:
  - localhost
  - kubernetes
  - kubernetes.default
  - kubernetes.default.svc
  - kubernetes.default.svc.cluster
  - kubernetes.default.svc.cluster.local
  - k8s-master01
  - k8s-master02
  - k8s-master03
  - kubernetes.io
  - 127.0.0.1
  - 0:0:0:0:0:0:0:1
  - 172.31.0.1
  - 10.10.10.49
  - 10.10.10.1
  - 10.10.10.2
  - 10.10.10.3
  - 8.8.8.8
controllerManager:
  extraArgs:
    bind-address: 127.0.0.1
    experimental-cluster-signing-duration: "87600h0m0s"
    feature-gates: "VolumeSnapshotDataSource=true,RotateKubeletServerCertificate=true"
    profiling: "false"
    node-monitor-grace-period: 40s
    node-monitor-period: 5s
    pod-eviction-timeout: 1m
    terminated-pod-gc-threshold: "12500"
    node-cidr-mask-size: "24"
    horizontal-pod-autoscaler-initial-readiness-delay: "30s"
    concurrent-service-syncs: "2"
    requestheader-client-ca-file: "/etc/kubernetes/pki/front-proxy-ca.crt"
    horizontal-pod-autoscaler-cpu-initialization-period: "5m0s"
    horizontal-pod-autoscaler-sync-period: "30s"
    horizontal-pod-autoscaler-tolerance: "0.1"
    alsologtostderr: "true"
    logtostderr: "false"
    requestheader-allowed-names: ""
    service-cluster-ip-range: "172.31.0.0/16"
    port: "10252"
    secure-port: "10257"
    attach-detach-reconcile-sync-period: "1m0s"
    kube-api-qps: "500"
    concurrent-replicaset-syncs: "10"
    horizontal-pod-autoscaler-downscale-stabilization: "15m"
    cluster-cidr: "172.30.0.0/16"
    concurrent-deployment-syncs: "10"
    cloud-provider: "external"
    concurrent-gc-syncs: "30"
    allocate-node-cidrs: "true"
    kube-api-burst: "200"
    log-dir: "/var/log/kubernetes/kube-controller-manager"
    cluster-name: "kubernetes"
    v: "2"
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      pathType: File
      readOnly: true
      name: localtime
    # - hostPath: "/var/log/kubernetes/kube-controller-manager"
    #   mountPath: "/var/log/kubernetes/kube-controller-manager"
    #   pathType: DirectoryOrCreate
    #   name: kube-controller-manager-logs
scheduler:
  extraArgs:
    bind-address: 127.0.0.1
    profiling: "false"
    alsologtostderr: "true"
    kube-api-qps: "500"
    logtostderr: "false"
    kube-api-burst: "200"
    log-dir: "/var/log/kubernetes/kube-scheduler"
    v: "2"
    port: "10251"
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      pathType: File
      readOnly: true
      name: localtime
    # - hostPath: "/var/log/kubernetes/kube-scheduler"
    #   mountPath: "/var/log/kubernetes/kube-scheduler"
    #   pathType: DirectoryOrCreate
    #   name: kube-scheduler-logs
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# 身份验证
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 2m0s
    enabled: true
  x509:
    clientCAFile: "/etc/kubernetes/pki/ca.crt"
# 授权
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
# 监听地址
address: 0.0.0.0
# kubelet监听端口
port: 10250
# kubelet只读端口，用于指标数据采集
readOnlyPort: 10255
# kubelet健康检查端口
healthzBindAddress: 127.0.0.1
healthzPort: 10248
clusterDNS:
- "172.31.0.10"
clusterDomain: "cluster.local"
configMapAndSecretChangeDetectionStrategy: Watch
featureGates:
  CPUManager: true
  DevicePlugins: true
  RotateKubeletServerCertificate: true
  RotateKubeletClientCertificate: true
staticPodPath: "/etc/kubernetes/manifests"
staticPodURL: ""
failSwapOn: true
kubeletCgroups: "/podruntime.slice"
systemCgroups: ""
cgroupDriver: "systemd"
cgroupsPerQOS: true
cgroupRoot: /
containerLogMaxFiles: 10
containerLogMaxSize: 20Mi
contentType: application/vnd.kubernetes.protobuf
cpuCFSQuota: true
cpuCFSQuotaPeriod: 100ms
cpuManagerPolicy: static
cpuManagerReconcilePeriod: 10s
enableControllerAttachDetach: true
enableDebuggingHandlers: true
enableContentionProfiling: true
enforceNodeAllocatable:
- pods
- kube-reserved
- system-reserved
eventBurst: 10
eventRecordQPS: 5
# 镜像删除策略
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
imageMinimumGCAge: 2m0s
# Node 资源驱逐策略
evictionHard:
  imagefs.available: "15%"
  memory.available: "100Mi"
  nodefs.available: "10%"
  nodefs.inodesFree: "5%"
# kubelet 资源驱逐策略
kubeReserved:
  cpu: "100m"
  memory: "256M"
kubeReservedCgroup: "/podruntime.slice"
# 系统资源驱逐策略
systemReserved:
  cpu: "500m"
  memory: "1.2G"
  ephemeral-storage: "10G"
systemReservedCgroup: "/system.slice"
evictionSoft: {}
evictionPressureTransitionPeriod: 5m0s
fileCheckFrequency: 20s
hairpinMode: hairpin-veth
httpCheckFrequency: 20s
iptablesDropBit: 15
iptablesMasqueradeBit: 14
kubeAPIBurst: 2000
kubeAPIQPS: 1000
makeIPTablesUtilChains: true
maxOpenFiles: 1000000
maxPods: 128
nodeLeaseDurationSeconds: 40
nodeStatusReportFrequency: 1m0s
nodeStatusUpdateFrequency: 10s
oomScoreAdj: -999
podPidsLimit: -1
protectKernelDefaults: false
registryBurst: 20
resolvConf: /etc/resolv.conf
registryPullQPS: 5
rotateCertificates: true
serverTLSBootstrap: true
runtimeRequestTimeout: 10m0s
serializeImagePulls: false
streamingConnectionIdleTimeout: 4h0m0s
syncFrequency: 1m0s
tlsCertFile: "/etc/kubernetes/pki/kubelet.crt"
tlsPrivateKeyFile: "/etc/kubernetes/pki/kubelet.key"
volumeStatsAggPeriod: 1m0s
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
healthzBindAddress: "127.0.0.1:10256"
metricsBindAddress: "0.0.0.0:10249"
clientConnection:
  acceptContentTypes: ""
  burst: 200
  contentType: application/vnd.kubernetes.protobuf
  kubeconfig: "/var/lib/kube-proxy/kubeconfig.conf"
  qps: 100
clusterCIDR: "172.30.0.0/16"
configSyncPeriod: 10m0s
conntrack:
  maxPerCore: 32768
  min: 131072
  tcpCloseWaitTimeout: 1h0m0s
  tcpEstablishedTimeout: 24h0m0s
detectLocalMode: ""
enableProfiling: false
hostnameOverride: "10.10.10.2"
featureGates:
  ValidateProxyRedirects: true
mode: "ipvs"
iptables:
  masqueradeAll: false
  masqueradeBit: 14
  minSyncPeriod: 0s
  syncPeriod: 30s
ipvs:
  excludeCIDRs: []
  minSyncPeriod: 0s
  scheduler: "rr"
  # metalLB
  strictARP: true
  syncPeriod: 30s
  tcpFinTimeout: 5s
  tcpTimeout: 5s
  udpTimeout: 5s
nodePortAddresses: []
oomScoreAdj: -999
portRange: ""
udpIdleTimeout: 250ms
winkernel:
  enableDSR: false
  networkName: ""
  sourceVip: ""
