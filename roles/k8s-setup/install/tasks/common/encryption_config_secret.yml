- block:
  - name: 判断 EncryptionConfig 配置文件是否存在
    stat: path="{{kubernetes_etc_dir}}/encryption_config_secret.yml"
    register: check_file

  - name: 判断随机密钥是否已经写入配置文件
    when: check_file.stat.exists
    shell: "cat {{kubernetes_etc_dir}}/encryption_config_secret.yml"
    register: presence

  - name: 生成 EncryptionConfig 随机密钥
    when: not check_file.stat.exists or presence.stdout is defined and presence.stdout.find('encryption_config_secret') == -1
    set_fact:
      secret: "{{ lookup('password', '/dev/null length=32 chars=digits,ascii_letters,digits') | lower | b64encode }}"

  - name: 写入独立配置文件
    when: not check_file.stat.exists or presence.stdout is defined and presence.stdout.find('encryption_config_secret') == -1
    blockinfile:
      path: "{{kubernetes_etc_dir}}/encryption_config_secret.yml"
      block: |
        encryption_config_secret: {{ secret }}
      create: true

  - name: 获取 encryption config secret
    shell: >
      cat "{{kubernetes_etc_dir}}/encryption_config_secret.yml" | grep encryption_config_secret | cut -d ":" -f 2 | sed 's/^[ \t]*//g'
    register: get_encryption_config_secret

  - name: 设置 encryption_config_secret 变量
    set_fact:
      encryption_config_secret: "{{ get_encryption_config_secret.stdout }}"
  run_once: true
  delegate_to: "{{ groups['masters'][0] }}"
