---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# 身份验证
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 2m0s
    enabled: true
  x509:
    clientCAFile: "{{ kubernetes_ca }}"
# 授权
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
{# AllowedUnsafeSysctls: net.core.somaxconn #}
# 监听地址
address: 0.0.0.0
# kubelet监听端口
port: {{ kubelet.bind_port }}
# kubelet只读端口，用于指标数据采集
readOnlyPort: {{ kubelet.bind_read_port }}
# kubelet健康检查端口
healthzBindAddress: 127.0.0.1
healthzPort: {{ kubelet.bind_healthz_port }}
clusterDNS:
- "{{ cluster_dns_ip }}"
clusterDomain: "{{ cluster_domain_name }}"
configMapAndSecretChangeDetectionStrategy: Watch
{% if kubelet.feature_gates is defined -%}
featureGates:
{% for k,v in kubelet.feature_gates.items() %}
  {{ k }}: {{ v | lower }}
{% endfor -%}
{% endif -%}
staticPodPath: "{{ manifest_dir }}"
staticPodURL: ""
failSwapOn: true
kubeletCgroups: "/podruntime.slice"
systemCgroups: ""
cgroupDriver: "{{ cgroup_driver }}"
cgroupsPerQOS: true
cgroupRoot: /
containerLogMaxFiles: 10
containerLogMaxSize: 20Mi
contentType: application/vnd.kubernetes.protobuf
cpuCFSQuota: true
cpuCFSQuotaPeriod: 100ms
cpuManagerPolicy: static
cpuManagerReconcilePeriod: 10s
enableControllerAttachDetach: true
enableDebuggingHandlers: true
enableContentionProfiling: true
enforceNodeAllocatable:
- pods
{% if  kubelet.kube_reserved_enabled is defined and  kubelet.kube_reserved_enabled %}
- kube-reserved
{% endif %}
{% if  kubelet.system_reserved_enabled is defined and  kubelet.system_reserved_enabled %}
- system-reserved
{% endif %}
eventBurst: 10
eventRecordQPS: 5
# 镜像删除策略
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
imageMinimumGCAge: 2m0s
# Node 资源驱逐策略
evictionHard:
  imagefs.available: "{{ kubelet.eviction_hard_imagefs_available }}"
  memory.available: "{{ kubelet.eviction_hard_memory_available }}"
  nodefs.available: "{{ kubelet.eviction_hard_nodefs_available }}"
  nodefs.inodesFree: "{{ kubelet.eviction_hard_nodefs_inodes_free }}"
{% if  kubelet.kube_reserved_enabled is defined and  kubelet.kube_reserved_enabled %}
# kubelet 资源驱逐策略
kubeReserved:
  cpu: "{{ kubelet.kube_cpu_reserved }}"
  memory: "{{ kubelet.kube_memory_reserved|regex_replace('Mi', 'M') }}"
kubeReservedCgroup: "/podruntime.slice"
{% endif %}
{% if  kubelet.system_reserved_enabled is defined and  kubelet.system_reserved_enabled %}
# 系统资源驱逐策略
systemReserved:
  cpu: "{{ kubelet.system_cpu_reserved|default('500m') }}"
  memory: "{{ kubelet.system_memory_reserved|default('512M')|regex_replace('Mi', 'M') }}"
  ephemeral-storage: "{{ kubelet.system_ephemeral_storage_reserved|default('10Gi')|regex_replace('Gi', 'G') }}"
systemReservedCgroup: "/system.slice"
{% endif %}
evictionSoft: {}
evictionPressureTransitionPeriod: 5m0s
fileCheckFrequency: 20s
hairpinMode: hairpin-veth
httpCheckFrequency: 20s
iptablesDropBit: 15
iptablesMasqueradeBit: 14
kubeAPIBurst: 2000
kubeAPIQPS: 1000
makeIPTablesUtilChains: true
maxOpenFiles: 1000000
maxPods: {{ kubelet.max_pods }}
nodeLeaseDurationSeconds: 40
{% if (kube_version is version('1.15.0', '>=')) %}
nodeStatusReportFrequency: 1m0s
{% endif %}
nodeStatusUpdateFrequency: 10s
oomScoreAdj: -999
podPidsLimit: -1
protectKernelDefaults: false
registryBurst: 20
{% if ansible_distribution_release == "bionic" %}
resolvConf: /run/systemd/resolve/resolv.conf
{% else %}
resolvConf: /etc/resolv.conf
{% endif %}
registryPullQPS: 5
rotateCertificates: true
serverTLSBootstrap: true
runtimeRequestTimeout: 10m0s
serializeImagePulls: false
streamingConnectionIdleTimeout: 4h0m0s
syncFrequency: 1m0s
{% if kubeadm_way is not defined or not kubeadm_way.kubeadm_cert %}
tlsCertFile: "{{ kubelet_cert }}"
tlsPrivateKeyFile: "{{ kubelet_cert_key }}"
{% endif %}
volumeStatsAggPeriod: 1m0s
