---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: {{ addon.namespace }}
spec:
{% if groups['kube_masters'] | length > 1 %}
  replicas: 2
{% endif %}
  template:
    spec:
      affinity:
        # podAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #   - labelSelector:
        #       matchExpressions:
        #       - key: security
        #         operator: In
        #         values:
        #         - S1
        #     topologyKey: topology.kubernetes.io/zone
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: 'app.kubernetes.io/instance'
                  operator: In
                  values:
                  - 'ingress-nginx'
              topologyKey: "kubernetes.io/hostname"
          # requiredDuringSchedulingIgnoredDuringExecution:
          # - labelSelector:
          #     matchExpressions:
          #     - key: 'app.kubernetes.io/instance'
          #       operator: In
          #       values:
          #       - 'ingress-nginx'
          #   topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 'node-role.kubernetes.io/ingress'
                operator: "Exists"
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: 'node-role.kubernetes.io/master'
                operator: In
                values:
{% for host in groups['kube_masters'] %}
                - {{ hostvars[host]['ansible_' + iface].ipv4.address }}
{% endfor %}
      tolerations:
        - operator: Exists
        - effect: ''
          key: node-role.kubernetes.io/master
          operator: Exists
      containers:
        - name: controller
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=nginx
            - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            # - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --enable-ssl-passthrough
            - --v=2
          env:
            - name: TZ
              value: Asia/Shanghai
          ports:
            - name: metrics
              containerPort: 10254
              protocol: TCP
