apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-metallb-dpl
  namespace: default
spec:
  selector:
    matchLabels:
      app: test-metallb
  template:
    metadata:
      labels:
        app: test-metallb
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - name: http
          containerPort: 80
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
---
apiVersion: v1
kind: Service
metadata:
  name: test-metallb-svc
  namespace: default
spec:
  ports:
  - name: http-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: test-metallb
  type: LoadBalancer
  # externalTrafficPolicy: Local
---
{% if (kube_version is version('1.19.0', '<')) %}
apiVersion: extensions/v1beta1
{% else %}
apiVersion: networking.k8s.io/v1
{% endif %}
kind: Ingress
metadata:
  name: test-metallb-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: test.local.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
{% if (kube_version is version('1.19.0', '<')) %}
          serviceName: test-metallb-svc
          servicePort: 80
{% else %}
          service:
            name: test-metallb-svc
            port:
              number: 80
{% endif %}
