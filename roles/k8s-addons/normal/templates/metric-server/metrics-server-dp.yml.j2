{% if (kube_version is version('1.14.0', '<')) %}
apiVersion: extensions/v1beta1
{% else %}
apiVersion: apps/v1
{% endif %}
kind: Deployment
metadata:
  name: metrics-server
  namespace: {{ addon.namespace }}
  labels:
    k8s-app: metrics-server
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      k8s-app: metrics-server
  template:
    metadata:
      name: metrics-server
      labels:
        k8s-app: metrics-server
    spec:
      serviceAccountName: metrics-server
      volumes:
      # mount in tmp so we can safely use from-scratch images and/or read-only containers
      - name: tmp-dir
        emptyDir: {}
      - name: front-proxy-ca
        configMap:
          name: front-proxy-ca
      priorityClassName: system-cluster-critical
      containers:
      - name: metrics-server
        image: {{ images.metrics_server.name }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 4443
          protocol: TCP
        args:
          - --cert-dir=/tmp
          - --secure-port=4443
          - --logtostderr
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --requestheader-client-ca-file=/front-proxy-ca.crt
{% if (images.metrics_server.file.split('-')[-1].split('v')[-1] is version('0.3.6', '>')) %}
          - --kubelet-use-node-status-port
        readinessProbe:
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
          failureThreshold: 3
{% endif %}
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
        - name: front-proxy-ca
          mountPath: /front-proxy-ca.crt
          subPath: front-proxy-ca.crt
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
