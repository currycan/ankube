#!/bin/bash
set -e

export PATH="{{ etcd_bin_dir }}:$PATH"

:  ${bak_dir:="{{ etcd_data_bak_dir }}"} #缺省备份目录,可以修改成存在的目录
:  ${etcd_cert_healthcheck_client:="{{ etcd_cert_healthcheck_client }}"}
:  ${etcd_cert_healthcheck_client_key:="{{ etcd_cert_healthcheck_client_key }}"}
:  ${etcd_ca:="{{ etcd_ca }}"}
:  ${endpoints:="{% for host in (groups['etcds'] + groups['add_etcds']) %}https://{{  hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }}:2379{% if not loop.last %},{% endif %}{% endfor %}"}

bak_prefix='etcd-'
cmd_suffix='date +%Y-%m-%d-%H:%M'
bak_suffix='.db'

#将规范化后的命令行参数分配至位置参数（$1,$2,...)
temp=`getopt -n $0 -o c:d: -u -- "$@"`

[ $? != 0 ] && {
    echo '
Examples:
    # just save once
    bash $0 /tmp/etcd.db
    # save in contab and  keep 5
    bash $0 -c 5
    '
    exit 1
    }
set -- $temp


# -c 备份保留副本数量
# -d 指定备份存放目录
while true;do
    case "$1" in
        -c)
            [ -z "$bak_count" ] && bak_count=$2
            printf -v null %d "$bak_count" &>/dev/null || \
                { echo 'the value of the -c must be number';exit 1; }
            shift 2
            ;;
        -d)
            [ ! -d "$2" ] && mkdir -p $2
            bak_dir=$2
            shift 2
            ;;
         *)
            [[ -z "$1" || "$1" == '--' ]] && { shift;break; }
            echo "Internal error!"
            exit 1
            ;;
    esac
done


function etcd2(){
    {{ etcd_bin_dir }}/etcdctl --cert-file $etcd_cert_healthcheck_client \
            --key-file  $etcd_cert_healthcheck_client_key \
            --ca-file   $etcd_ca \
            --endpoints $endpoints $@
}

function etcd3(){
    ETCDCTL_API=3 {{ etcd_bin_dir }}/etcdctl   \
    --cert $etcd_cert_healthcheck_client \
    --key  $etcd_cert_healthcheck_client_key \
    --cacert $etcd_ca \
    --endpoints $endpoints $@
}

etcd::cron::save(){
    cd $bak_dir/
    {{ etcd_bin_dir }}/etcdctl snapshot save  $bak_prefix$($cmd_suffix)$bak_suffix \
    --cert $etcd_cert_healthcheck_client \
    --key  $etcd_cert_healthcheck_client_key \
    --cacert $etcd_ca
    rm_files=`ls -t $bak_prefix*$bak_suffix | tail -n +$[bak_count+1]`
    if [ -n "$rm_files" ];then
        rm -f $rm_files
    fi
}

main(){
    [ -n "$bak_count" ] && etcd::cron::save || etcd_v3 snapshot save $@
}

main $@
