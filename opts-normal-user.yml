
########################################################
# 普通用户（devops）添加集群操作权限
########################################################

- hosts: "kube_cluster"
  tasks:
  - name: 修改文件目录权限
    file:
      path: "{{ base_bin_dir }}"
      state: directory
      recurse: yes
      owner: root
      group: root
      mode: 0775

  - name: 判断执行用户是否存在
    action: shell /usr/bin/getent passwd {{ item }} | grep {{ item }} | cut -d":" -f6
    register: user_results
    with_items:
    - devops

  # docker
  - name: 添加非 root 用户命令执行目录环境变量
    when: 'item.stdout != ""'
    lineinfile:
      dest: "{{ item.stdout }}/.bash_profile"
      state: present
      regexp: "{{ docker_bin_dir }}"
      line: export PATH="{{ docker_bin_dir }}:$PATH"
    with_items:
    - "{{ user_results['results'] }}"

  - name: 添加非 root 用户 docker 命令权限
    when: 'item.stdout != ""'
    shell: >
      usermod -aG docker {{ item.item }}
    with_items:
    - "{{ user_results['results'] }}"

  # kubectl
  - name: 添加非 root 用户命令执行目录环境变量
    when: 'item.stdout != ""'
    lineinfile:
      dest: "{{ item.stdout }}/.bash_profile"
      state: present
      regexp: "{{ kubernetes_bin_dir }}"
      line: export PATH="{{ kubernetes_bin_dir }}:$PATH"
    with_items:
    - "{{ user_results['results'] }}"

  - name: 创建 $HOME/.kube/config 配置清单目录
    when: 'item.stdout != ""'
    file: name="{{ item.stdout }}/.kube/" state=directory
    with_items:
      - "{{ user_results['results'] }}"

  - name: 获取 kubeconfig admin 文件
    slurp:
      src: "{{ kubernetes_etc_dir }}/admin.conf"
    register: slurp_kubeconfig
    run_once: true
    delegate_to: "{{ groups['masters'][0] }}"

  - name: 非 root 用户配置 $HOME/.kube/config
    when: 'item.stdout != ""'
    copy:
      content: "{{ slurp_kubeconfig.content | b64decode }}"
      dest: "{{ item.stdout }}/.kube/config"
      owner: "{{ item.item }}"
      group: "{{ item.item }}"
      mode: 0600
    no_log: true
    with_items:
      - "{{ user_results['results'] }}"

  - name: 修改文件目录权限
    when: 'item.stdout != ""'
    file:
      path: "{{ item.stdout }}/.kube/"
      state: directory
      recurse: yes
      owner: "{{ item.item }}"
      group: "{{ item.item }}"
      mode: 0700
    with_items:
      - "{{ user_results['results'] }}"

  - name: 添加非 root 用户 kubectl 命令自动补全
    when: 'item.stdout != ""'
    lineinfile:
      dest: "{{ item.stdout }}/.bashrc"
      state: present
      regexp: 'kubectl completion'
      line: "source <({{ kubernetes_bin_dir }}/kubectl completion bash)"
    with_items:
    - "{{ user_results['results'] }}"

  # helm3
  # 执行完后需要手动添加 repo
  - name: 添加非 root 用户命令执行目录环境变量
    when: 'item.stdout != ""'
    lineinfile:
      dest: "{{ item.stdout }}/.bash_profile"
      state: present
      regexp: "{{ helm3_bin_dir }}"
      line: export PATH="{{ helm3_bin_dir }}:$PATH"
    with_items:
    - "{{ user_results['results'] }}"

  - name: 添加非 root 用户 helm 命令自动补全
    when: 'item.stdout != ""'
    lineinfile:
      dest: "{{ item.stdout }}/.bashrc"
      state: present
      regexp: 'helm completion'
      line: "source <({{ helm3_bin_dir }}/helm completion bash)"
    with_items:
    - "{{ user_results['results'] }}"
