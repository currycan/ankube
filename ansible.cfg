[ssh_connection]
ssh_args = -o ControlMaster=auto -o ControlPersist=30m -o ConnectionAttempts=100 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null
# control_path = ~/.ssh/ansible-%%h-%%p-%%r
control_path = /tmp/ansible-ssh-%%h-%%p-%%r
pipelining = True
sftp_batch_mode = True

[defaults]
# some basic default values...

#inventory      = /etc/ansible/hosts
#library        = /usr/share/my_modules/
#remote_tmp     = ~/.ansible/tmp
#forks          = 5
#poll_interval  = 15
#sudo_user      = root
#ask_sudo_pass = True
#ask_pass      = True
transport = ssh
remote_port = 22
#module_lang    = C

strategy_plugins = plugins/mitogen/ansible_mitogen/plugins/strategy
roles_path = roles:/etc/ansible/roles
remote_tmp = ~/.ansible/tmp
force_valid_group_names = ignore
local_tmp = ~/.ansible/tmp
inventory = hosts
gathering = smart
fact_caching = jsonfile
fact_caching_connection = /tmp/facts_cache
host_key_checking = False
stdout_callback = skippy
library = ./library
command_warnings=False
# 显示任何跳过任务的状态 ，默认是显示
display_skipped_hosts = False
# 如果所引用的变量名称错误的话, 将会导致ansible在执行步骤上失败
error_on_undefined_vars = True
retry_files_enabled = False
deprecation_warnings = False
inventory_ignore_extensions = ~, .orig, .bak, .ini, .cfg, .retry, .pyc, .pyo, .creds
become = True
timeout = 30
# 在sudo环境下产生一个shell交互接口. 用户只在/bin/bash的或者sudo限制的一些场景中需要修改
executable = /bin/sh
#sudo_exe = sudo

#sudo_flags = -H -S -n

remote_user = root

log_path = ansible.log

[inventory]
ignore_patterns = artifacts, credentials

[privilege_escalation]

[paramiko_connection]

[persistent_connection]

[accelerate]

[selinux]

[colors]
#highlight = white
#verbose = blue
#warn = bright purple
#error = red
debug = white
#deprecate = purple
#skip = cyan
#unreachable = red
#ok = green
#changed = yellow
#diff_add = green
#diff_remove = red
#diff_lines = cyan

[diff]
